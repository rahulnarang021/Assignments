{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww27000\viewh19280\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 Create AppComposer or AppKernel class that will initialise common dependencies like apiManager and it will be injected in all components through dependencyProvider class\
Pass proper error message from client to viewModel to be displayed on screen\
Combine StockList and ErrorViewModel in StockListViewModel class to make sure we use only one response object from API Call\
Use DI tool in test-cases to avoid DispatchAsync.Main queue everytime\
Move StockViewState to Helper classes\
Write more quality test cases to test correct stockModel selection is passed during the tap\
Test case for api call when specific search results are showing up was missing\
Write UI test cases to check number of cells with viewState are binded correctly in ViewController class\
Display more content in stock detail screen (like current price and graphical analysis of stock\'92s overall profit with dividend)}